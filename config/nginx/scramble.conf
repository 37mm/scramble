#
# Scramble.io sample Nginx site config.
# Fill in the blanks, then put this file into /etc/nginx/sites-enabled/
# Don't forget to restart Nginx (`service nginx restart`)
# 

# The application server (Go)
upstream app_scramble {
    server 127.0.0.1:8888;
}

# Handle SSL connections. Forward to the Scramble application server.
server {
    server_name <YOUR HOSTNAME>;
    access_log /var/log/nginx/scramble.log;

    listen 443;
    ssl on;
    ssl_certificate /etc/ssl/scramble.io/<YOUR SSL CERT>.crt;
    ssl_certificate_key /etc/ssl/scramble.io/<YOUR SSL PRIVATE KEY>.key;

    # Insist on a strong ciphersuite, mitigate various attacks (POODLE etc)
    # See https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # Use stronger-than-1024-bit DH ephemeral parameters for forward secrecy
    # Create /etc/ssl/certs/dhparam.pem as follows:
    # cd /etc/ssl/certs
    # openssl dhparam -out dhparam.pem 4096
    # ...and be prepared to let it run for ~30 minutes
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Scramble.io should only ever load over HTTPS. Prevent sslstrip via HSTS:
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";

    location / {
        proxy_pass http://app_scramble/;
        proxy_redirect off;
        proxy_set_header Host $host;
    }
}

# Redirect HTTP to HTTPS
server {
    server_name scramble.io;
    listen 80;
    return 301 https://$host$request_uri;
}

